name: Pipeline

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  echo:
    if: ${{ !startsWith(github.event.head_commit.message, 'docs') }}
    runs-on: ubuntu-latest
    steps:
    - name: echo
      run: echo 'next'

  main:
    needs: echo
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout [main]
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - run: npm install
      - run: npx nx affected --target=lint --parallel --max-parallel=2
      - run: npx nx affected --target=test --parallel --max-parallel=2
      - run: npx nx affected --target=build --parallel --max-parallel=3
  pr:
    needs: echo
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - run: npm install
      - run: npx nx affected --target=build --parallel --max-parallel=3
      - run: npx nx affected --target=test --parallel --max-parallel=2

  docs:
    if: ${{ startsWith(github.event.head_commit.message, 'docs') }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to Tencent Registry
        uses: docker/login-action@v1
        with:
          registry: ccr.ccs.tencentyun.com
          username: ${{ secrets.TENCENT_USERNAME }}
          password: ${{ secrets.TENCENT_TOKEN }}
      -
        name: Get Previous tag
        id: previousTag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found

      -
        name: Get Short Sha
        id: short-sha
        uses: benjlevesque/short-sha@v1.2
      - run: echo $SHA
        env:
          SHA: ${{ steps.short-sha.outputs.sha }}

      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: docs.Dockerfile
          push: true
          tags: |
            aysnine/d2-craft-docs:${{ steps.previousTag.outputs.tag }}_${{ steps.short-sha.outputs.sha }}
            aysnine/d2-craft-docs:latest
            ccr.ccs.tencentyun.com/aysnine/d2-craft-docs:${{ steps.previousTag.outputs.tag }}_${{ steps.short-sha.outputs.sha }}
            ccr.ccs.tencentyun.com/aysnine/d2-craft-docs:latest

      - run: |
          TAG=${{ steps.previousTag.outputs.tag }}_${{ steps.short-sha.outputs.sha }}
          echo $TAG
          sed -i -e "s/\:latest/\:${TAG}/g" ./deploy/docs__d2-cloud.yaml
          cat ./deploy/docs__d2-cloud.yaml

      - uses: actions-hub/kubectl@v1.21.2
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f ./deploy/docs__d2-cloud.yaml
